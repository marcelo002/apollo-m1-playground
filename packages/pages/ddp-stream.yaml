# Â© Copyright 2025 Stuart Parmenter
# SPDX-License-Identifier: MIT

# =========================================
# DDP Stream Page (LVGL, ESP-IDF only)
# Tested with ESPHome 2025.8
# =========================================

lvgl_page_manager:
  pages:
    - page: ddp_video
      friendly_name: "Video (DDP)"

substitutions:
  # vars.yaml provides:
  # DEFAULT_VIDEO_SRC: "https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4"   # or "mario.gif" or https://... / file:///sd/... etc.
  CANVAS_WIDTH: ${DISPLAY_W}
  CANVAS_HEIGHT: ${DISPLAY_H}

# UDP DDP sink + canvas bindings (no w/h required here)
ddp_stream:
  id: ddp
  streams:
    - id: stream_video
      canvas: "video_canvas"
      back_buffers: ${BACK_BUFFERS}  # 0-2

# -----------------------------
# WebSocket control
# -----------------------------
ws_ddp_control:
  id: ws_ddp
  outputs:
    - id: output_video
      ddp_stream: stream_video
      src: ${DEFAULT_VIDEO_SRC}
      # width/height optional; if omitted, auto from canvas
      # width: 64
      # height: 64
      # pace: 20
      # ema: 0.0
      # expand: auto
      # loop: true
      # hw: auto
      format: rgb565

# -----------------------------
# LVGL page with a single canvas
# -----------------------------
lvgl:
  pages:
    - id: ddp_video
      widgets:
        - canvas:
            id: video_canvas
            width: ${CANVAS_WIDTH}
            height: ${CANVAS_HEIGHT}
      on_load:
        then:
          - lambda: |-
              id(output_video).start();
      on_unload:
        then:
          - lambda: |-
              id(output_video).stop();

# -----------------------------
# Runtime source change
# -----------------------------
text:
  - platform: template
    id: video_src_ctl
    name: "DDP Video Source"
    optimistic: true
    initial_value: ${DEFAULT_VIDEO_SRC}
    mode: text
    min_length: 4
    max_length: 255
    restore_value: true
    on_value:
      then:
        - ws_ddp_control.set_src:
            id: output_video
            src: !lambda "return x;"